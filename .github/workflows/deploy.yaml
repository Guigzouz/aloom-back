# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main # Trigger on push to main branch

# jobs:
#   build_and_push:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Log in to GitHub Packages Docker registry
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Build and push Docker images
#         run: |
#           # Build db image (if necessary, e.g., for custom configuration)
#           docker compose build db

#           # Build api image
#           docker compose build api

#           # Tag the images
#             docker tag aloom-back_db:latest ghcr.io/${{ github.repository | toLowerCase }}/db:latest
#             docker tag aloom-back_api:latest ghcr.io/${{ github.repository | toLowerCase }}/api:latest

#           # Push both images
#           docker push ghcr.io/${{ github.repository }}/db:latest
#           docker push ghcr.io/${{ github.repository }}/api:latest

#   deploy_to_droplet:
#     runs-on: ubuntu-latest
#     needs: build_and_push # Ensure build and push is completed before deployment
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Copy docker compose.yml to Droplet
#         uses: appleboy/scp-action@v0.1.4
#         with:
#           host: ${{ secrets.DROPLET_IP }}
#           username: ${{ secrets.DROPLET_USER }}
#           key: ${{ secrets.DROPLET_SSH_KEY }}
#           source: "docker compose.yml"
#           target: "/path/to/your/project/docker compose.yml"

#       - name: Copy .env file to Droplet
#         uses: appleboy/scp-action@v0.1.4
#         with:
#           host: ${{ secrets.DROPLET_IP }}
#           username: ${{ secrets.DROPLET_USER }}
#           key: ${{ secrets.DROPLET_SSH_KEY }}
#           source: ".env"
#           target: "/path/to/your/project/.env"

#       - name: Deploy to Droplet using Docker Compose
#         uses: appleboy/ssh-action@v0.1.9
#         with:
#           host: ${{ secrets.DROPLET_IP }}
#           username: ${{ secrets.DROPLET_USER }}
#           key: ${{ secrets.DROPLET_SSH_KEY }}
#           script: |
#             # Pull the latest images from GitHub Packages
#             docker compose pull

#             # Stop and remove the old containers (if any)
#             docker compose down

#             # Start the containers (db and api) in detached mode
#             docker compose up -d
