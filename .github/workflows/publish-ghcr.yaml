name: CI / CD for aloom-back

on:
  push:
    branches:
      - main

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: |
          docker login --username guigzougz --password ${{ secrets.GH_PAT }} ghcr.io

      # Push the DB image
      - name: Tag and push the DB image
        run: |
          docker pull postgres:latest
          docker tag postgres:latest ghcr.io/guigzouz/aloom-back-db:latest
          docker push ghcr.io/guigzouz/aloom-back-db:latest

      # Build and push the API image
      - name: Build and push the API image
        run: |
          docker build . -f Dockerfile --tag ghcr.io/guigzouz/aloom-back-api:latest
          docker push ghcr.io/guigzouz/aloom-back-api:latest

  deploy_to_droplet:
    needs: build_and_publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Log in to the Droplet and deploy using Docker run
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            # Log in to GHCR on the Droplet
            echo ${{ secrets.GH_PAT }} | docker login ghcr.io -u guigzougz --password-stdin

            # Pull the latest images
            docker pull ghcr.io/guigzouz/aloom-back-db:latest
            docker pull ghcr.io/guigzouz/aloom-back-api:latest

            # Stop and remove any old containers (optional, based on your needs)
            docker ps -q --filter "name=aloom-back-db" | xargs -r docker stop | xargs -r docker rm
            docker ps -q --filter "name=aloom-back-api" | xargs -r docker stop | xargs -r docker rm

            # Create a Docker network (if not already created)
            docker network create aloom-back-network || true

            # Run the updated DB container
            docker run -d --name aloom-back-db --network aloom-back-network -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} -p 5432:5432 ghcr.io/guigzouz/aloom-back-db:latest

            # Run the updated API container (connected to the same network)
            docker run -d --name aloom-back-api --network aloom-back-network -p 3000:3000 ghcr.io/guigzouz/aloom-back-api:latest
